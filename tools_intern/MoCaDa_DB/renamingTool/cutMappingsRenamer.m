function cutMappingsRenamer( inputPathOrFile, outputPath, nameMap, prefix )
% cutMappingsRenamer( inputPathOrFile, outputPath, nameMap, prefix )
% 
%       inputPathOrFile: Either a single *.txt-file or a directory, where all 
%                        *.txt files will be processed
%       outputPath:      This is where the new cutmapping files will be saved.
%       nameMap:         The nameMap generated by mocapRenamer. Can be
%                        either the variable itself or a string pointing to
%                        the *.mat file (mocapRenamer stores the last nameMap
%                        in nameMap.mat by default).
%       prefix:          The path-prefix used for the cutmapping-file.

n = length(inputPathOrFile);

% check if first parameter refers to a single file or a path
if strcmp(inputPathOrFile(n-3:n), '.txt')
    positions = strfind(inputPathOrFile, '\');
    
    lastBackslashPosition = positions(length(positions));
    inputFiles{1} = inputPathOrFile( lastBackslashPosition + 1 : length(inputPathOrFile) );
    path = inputPathOrFile(1:lastBackslashPosition);
    
else
    if inputPathOrFile(n)~='\'
        inputPathOrFile(n+1)='\';
    end
    path = inputPathOrFile;
    inputFiles = dir([inputPathOrFile '*.txt']);
    inputFiles = {inputFiles.name};
end

% check if nameMap is a variable already or is to be loaded first
if isstr(nameMap)
    load(nameMap);
end

% check output path for ending '\'
if outputPath(length(outputPath))~='\'
    outputPath(length(outputPath)+1)='\';
end

% check prefix for ending '\'
if length(prefix)>0 && prefix(length(prefix))~='\'
    prefix(length(prefix)+1)='\';
end

% process inputFiles
for i=1:length(inputFiles)
    disp(['Processing ' path inputFiles{i} ' ...']);
    inFile = fopen([path inputFiles{i}]);
    outFile = fopen([outputPath inputFiles{i}], 'w');
    
    while ~feof(inFile)
        line = fgets(inFile);
        counter = 0;
        
        newline = line;
        for j=1:length(nameMap)
            pos = strfind(line, nameMap{j,1});
            if not(isempty(pos))
                quotes = strfind(line, '"');
                newline = ['"' prefix nameMap{j,2} line(quotes(2):length(line))];
                break;
            end
        end
        fprintf(outFile, '%s', newline);
    end
    
    fclose(inFile);
    fclose(outFile);
end
disp('done.');
