
% parameter.docNames = {}; %all documents

parameter.docNames = { ...
                      '/HDM05_CMU_EG08_tiny/tr/HDM_tr_04-01_01_120.amc', ...
%                       '/HDM05_CMU_EG08_tiny/bd/HDM_bd_02-02_01_120.amc', ...
%                       '/HDM05_CMU_EG08_tiny/dg/HDM_dg_03-02_01_120.amc', ...
%                       '/HDM05_CMU_EG08_tiny/cmu/CMU_01_jumping_01forwardMultiple+_120.amc', ...           
                     };
% '/HDM05_CMU_EG08_tiny/bd/HDM_bd_05-03_03_120.amc'
%                       '/HDM05_CMU_EG08_tiny/cmu/CMU_03_walking_04unevenTerrain_120.amc', ...
%                       '/HDM05_CMU_EG08_tiny/cmu/CMU_56_vignettes_06punchGrabSkipYawnStretchLeapLiftWalkJump_120.amc'};

parameter.feature_set = {'AK_upper', 'AK_lower', 'AK_mix_avr'};
% the keyframe function has to be selected according to the feature set.
parameter.keyframeFunction = 'manualKeyframesForAnnotation_AVR';
parameter.outputProgress = true;
parameter.superclasses = {...
       'neutral',...
       'tpose',...
       'move',...
       'turn',...
       'sitLieDown',...
       'standUp',...
       'hopOneLeg', ...
       'jump',...
       'kick',...
       'punch',...
       'rotateArms',...
       'throwR',...
       'grabDepR',...
       'cartwheel',...
       'exercise'};

parameter.vis = 0;
parameter.visCombined = 0;
% parameter.docNames = {'\HDM05_CMU_EG08_tiny\bd\HDM_bd_01-01_01_120.amc',...
%     '\HDM05_CMU_EG08_tiny\bd\HDM_bd_01-01_03_120.amc'};
[annotation, classificationResult] = superclassAnnotation(VARS_GLOBAL.DB, 'HDM05_EG08_cut_amc_training', parameter);

%% evaluate classificationresult with some precision recall cost measures
downsampling_fac = 4;

global VARS_GLOBAL;

DB_concat = DB_index_load(VARS_GLOBAL.DB, parameter.feature_set, downsampling_fac);

parameter.displayCost=0;
manualClassificationResult = manualClassificationTiny();
parameter.evaluationMethod = 'countingPR' ;
countingPR  = evaluateClassification(DB_concat.files_name, DB_concat.files_frame_length, classificationResult, manualClassificationResult, parameter);
parameter.evaluationMethod = 'framewisePR' ;
framewisePR  = evaluateClassification(DB_concat.files_name, DB_concat.files_frame_length, classificationResult, manualClassificationResult, parameter);

meanCountingPR = mean(countingPR)
meanFramewisePR = mean(framewisePR)


%% visualize
docIndices = 40;

parameter.manualAnnotationFunction = 'manualClassificationTiny';
parameter.feature_set = {'AK_upper', 'AK_lower', 'AK_mix_avr'};
parameter.countingPR = countingPR;
parameter.framewisePR = framewisePR ;

visSuperclassAnnotation(VARS_GLOBAL.DB, classificationResult, docIndices, parameter);

