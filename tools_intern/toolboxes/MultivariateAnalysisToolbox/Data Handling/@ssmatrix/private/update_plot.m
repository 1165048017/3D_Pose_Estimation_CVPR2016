function update_plot(fig)

% UPDATE_PLOT updates the plot(ssmatrix) figure.
% ----------------
% update_plot(fig)
% ----------------
% Description: main drawing function of plot(ssmatrix), updating the
%              figure each time the user changes anything.
% Input:       {fig} handle to main figure.

% © Liran Carmel
% Classification: Visualization
% Last revision date: 10-Jan-2005

% initialization - get user data and main axes
axes(findobj(fig,'tag','ax_main'));
ud = get(fig,'userdata');

% discriminate between plot of distances and thresholding
delete(findobj(gcf,'type','axes'));
delete(findobj(gcf,'type','uicontrol'));
matrix = get(ud.data,'matrix');
if ud.th_view == 0
    pseudocolor(matrix); colormap jet
    ax = findobj(gcf,'tag','','type','axes');
    set(ax,'tag','ax_main');
else
    thresh = (matrix < ud.th_val);
    pseudocolor(thresh); colormap bw
    ax = findobj(gcf,'tag','','type','axes');
    set(ax,'tag','ax_main');
    pos = get(ax,'position');
    delete(findobj(gcf,'tag','Colorbar'));
    set(ax,'position',pos)
%     cmd = ['h_sl=gco; fig=get(h_sl,''parent'');' ...
%             'h_ed=findobj(fig,''type'',''uicontrol'');' ...
%             'h_ed=findobj(h_ed,''style'',''edit'');' ...
%             'val=get(h_sl,''value'');' ...
%             'set(h_ed,''string'',sprintf(''%.2e'',val));' ...
%             'ax=findobj(fig,''type'',''axes''); ud=get(fig,''userdata'');' ...
%             'h_sur=findobj(ax,''type'',''surface'');' ...
%             'thresh=get(ud.data,''matrix''); thresh=(thresh < val);' ...
%             'set(h_sur,''cdata'',double(thresh)); ud.th_val = val;' ...
%             'set(fig,''userdata'',ud);'];
    uicontrol(fig,'style','slider','min',min2(matrix),'max',max2(matrix),...
        'sliderstep',[0.1 1],'value',ud.th_val,...
        'units','normalized','position',[0.85 0.11 0.03 0.815],...
        'callback','plot(ssmatrix,101)');
    uicontrol(fig,'style','text','string','threshold:',...
        'background',[0.8 0.8 0.8], ...
        'units','normalized','position',[0.8 0.94 0.08 0.04]);
%     cmd = ['h_ed=gco; fig=get(h_ed,''parent'');' ...
%             'h_sl=findobj(fig,''type'',''uicontrol'');' ...
%             'h_sl=findobj(h_sl,''style'',''slider'');' ...
%             'val=str2num(get(h_ed,''string'')); mn=get(h_sl,''min'');' ...
%             'mx=get(h_sl,''max''); if val < mn,' ...
%             'val=mn; set(h_ed,''string'',num2str(val));' ...
%             'elseif val > mx, val=mx; set(h_ed,''string'',num2str(val)); end,' ...
%             'set(h_sl,''value'',val);' ...
%             'ax=findobj(fig,''type'',''axes''); ud=get(fig,''userdata'');' ...
%             'h_sur=findobj(ax,''type'',''surface'');' ...
%             'thresh=get(ud.data,''matrix''); thresh=(thresh < val);' ...
%             'set(h_sur,''cdata'',double(thresh)); ud.th_val = val;' ...
%             'set(fig,''userdata'',ud);'];
    uicontrol(fig,'style','edit','string',sprintf('%.2f',ud.th_val),...
        'background',[0.8 0.8 0.8], ...
        'units','normalized','position',[0.88 0.94 0.12 0.04],...
        'callback','plot(ssmatrix,102)');
    uicontrol(fig,'style','text','background',[0 0 0],...
        'units','normalized','position',[0.82 0.06 0.025 0.03]);
    uicontrol(fig,'style','text','background',[1 1 1],...
        'units','normalized','position',[0.82 0.02 0.025 0.03]);
    uicontrol(fig,'style','text','background',[0.8 0.8 0.8],...
        'units','normalized','position',[0.85 0.06 0.1 0.03],...
        'string','below threshold');
    uicontrol(fig,'style','text','background',[0.8 0.8 0.8],...
        'units','normalized','position',[0.85 0.02 0.1 0.03],...
        'string','above (equal) threshold');
end

% restore variable names (x-axis)
if ~isempty(ud.loc_horiz)
    set(ax,'xtick',[]);
    Y_POS = 0.95;
    names = ud.txt_horiz;
    pos = ud.loc_horiz;
    h_horiz = zeros(1,length(pos));
    for ii = 1:length(pos)
        h_horiz(ii) = text(pos(ii),Y_POS,names(ii,:));
    end
    set(h_horiz,'rotation',270,'fontsize',7);
end

% restore variable names (y-axis)
if ~isempty(ud.loc_vert)
    set(ax,'ytick',[]);
    X_POS = 0.95;
    names = ud.txt_vert;
    pos = ud.loc_vert;
    h_vert = zeros(1,length(pos));
    for ii = 1:length(pos)
        h_vert(ii) = text(X_POS,pos(ii),deblank(names(ii,:)));
    end
    set(h_vert,'horizontal','right','fontsize',7);
end

% associate uicontextmenu with the surface plot
h = findobj(get(ax,'children'),'type','surface');
set(h,'uicontextmenu',ud.cmenu);